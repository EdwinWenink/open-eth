# Sets up infrastructure where Nginx handles TLS and
# static content. Nginx proxies API requests to the
# server. The server is connected to a PostgreSQL
# database.
#
# see https://docs.docker.com/compose/compose-file/
#
version: '2'
services:
   web:
      # docker exec dex_web_1 nginx -t
      # docker kill -s HUP dex_web_1
      image: nginx
      volumes:
         - ./www:/srv/openeth/www:ro
         - ./log:/srv/openeth/log:rw
         - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      links:
         - server
      ports:
         - "8080:80"
   server:
      image: recmo/postgrest
      links:
         - db:db
      environment:
         POSTGREST_JWT_SECRET: 'Vljn/spHRgflxrCT7oG/8uh3pvbCDZOsE0CqMkg40c8'
         PG_ENV_POSTGRES_USER: 'openeth'
         PG_ENV_POSTGRES_PASSWORD: 'EmSH7bIXL9si4cWx4Iyw'
         PG_ENV_POSTGRES_DB: 'openeth'
         PG_PORT_5432_TCP_ADDR: 'db'
         PG_PORT_5432_TCP_PORT: '5432'
   db:
      # docker exec -ti dex_db_1 psql -U openeth -d openeth
      image: postgres:9.5
      volumes:
         - ./database:/docker-entrypoint-initdb.d:ro
         - ./data:/var/lib/postgresql/:rw
      environment:
         POSTGRES_DB: 'openeth'
         POSTGRES_USER: 'openeth'
         POSTGRES_PASSWORD: 'EmSH7bIXL9si4cWx4Iyw'

# TODO: Automatically handle letsencrypt certificates
# letsencrypt:
#   image: jrcs/letsencrypt-nginx-proxy-companion
#
#$ docker run -d \
#    -v /path/to/certs:/etc/nginx/certs:rw \
#    --volumes-from nginx-proxy \
#    -v /var/run/docker.sock:/var/run/docker.sock:ro \
#    jrcs/letsencrypt-nginx-proxy-companion

# Note: to start a psql session:
#
#   docker run -it --link dex_postgres_1:postgres --rm postgres sh\
#      -c 'exec psql -h postgres -p 5432 -U postgres'
#
